<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="BarCodeReaders" Id="{6db726c2-b8f2-4f56-a606-779b1afe45e4}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM BarCodeReaders
VAR
	BCR_S6040_01: CognexDataMan260;		// P8005 Induct Confirm
	BCR_S7004_01: CognexDataMan260;		// P8010 Location Update
			
		
	Arrival_Item 			: ST_Item;		// Output Item (Bar code read) To Sort PLC
	LastArrival_Item		: ST_Item;		// Last Output Item (Bar code read) To Sort PLC
	ReadID_P6040_Old		: UDINT;

	fb_SorterArrivalBuffer			: FB_ItemBuffer;	// Function to Process the SorterArrivalBuffer
	
	sBcr_S6040_01Log			: STRING;
	tpBcr_S6040_01Trig					: TP;	// Pulse timer for BCR Reader

	rSorterPE					: R_TRIG; 	// Capture the Rising edge of the Sorter BCR PE
	fSorterPE					: F_TRIG; 	// Capture the Falling edge of the Sorter BCR PE
	r_BCR_S6040_01TriggerON			: R_TRIG;
	f_BCR_S6040_01TriggerON			: F_TRIG;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Create instances of Buffer Processing Functions to initialize the buffers and data
fb_SorterArrivalBuffer.Master := TRUE;

// Setup Logging
fb_SorterArrivalBuffer.LogEntries := .nItemBufferLogEnable.ARRIVALS;

// Setup Buffer Name for Logging
fb_SorterArrivalBuffer.Name := 'SYS ARRIVAL';

fb_SorterArrivalBuffer(st_BufferData := st_SorterArrivalBufferP6040
					, st_BufferFdbkIn := st_ArrivalFdbkInP6040
					, st_BufferFdbkOut => st_ArrivalFdbkOutP6040);

IF GVL_IO.INIT THEN
	fb_SorterArrivalBuffer.Clear();
END_IF
// Reset All Metrics when requested
IF MAIN.In_ResetAllMetrics THEN
	BCR_S6040_01.In_ResetCounts := MAIN.In_ResetAllMetrics;
	BCR_S7004_01.In_ResetCounts := MAIN.In_ResetAllMetrics;
END_IF

// Set up Bar Code Readers
//----------------------------------------P6040--------------------------------------------------------------
BCR_S6040_01.LogEntries := .nBarcodeLogEnable.BCR_S6040_01_LOG;
BCR_S6040_01(
	In_ReadTrig:= PhotoEyes.PE_6261.Out_OnFltrd, 
	In_ResetCounts:= , 
	In_TriggerOnTime := T#20MS ,
	In_EquipID := '00001',
	Out_NewReadTrig=> , 
	Out_ReadString=> , 
	Out_ReadStatus=> ,
	Out_ResultID=>, 
	MisreadCount=> , 
	GoodreadCount=> );
	
BCR_S6040_01.LogEntries := .nBarcodeLogEnable.BCR_S6040_01_LOG;
tpBcr_S6040_01Trig(
	IN := PhotoEyes.PE_6261.Out,
				PT := T#10MS,
				Q =>);
// Capture rising and falling edge Triggers of the Sorter BCR Trigger PE
 rSorterPE(CLK:= PhotoEyes.PE_6261.Out, Q =>);
 fSorterPE(CLK:= PhotoEyes.PE_6261.Out, Q =>);

// Log the rising/falling edge of the Trigger
IF rSorterPE.Q OR fSorterPE.Q THEN
	IF nBarcodeLogEnable.TRIGGER_PE THEN
		// Write to the Error List
		ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_HINT OR ADSLOG_MSGTYPE_LOG,
			msgFmtStr := 'Sort BCR PE Blocked : %s',
			strArg := BOOL_TO_STRING(PhotoEyes.PE_6261.Out)
			); 
	END_IF
END_IF

// Capture rising and falling edge Triggers of the Sorter BCR Trigger PE
r_BCR_S6040_01TriggerOn(CLK:= BCR_S6040_01.Out_TriggerState, Q =>);
f_BCR_S6040_01TriggerOn(CLK:= BCR_S6040_01.Out_TriggerState, Q =>);

// Log the rising edge of the Trigger
IF r_BCR_S6040_01TriggerOn.Q OR f_BCR_S6040_01TriggerOn.Q THEN
	IF nBarcodeLogEnable.TRIGGER THEN
		// Write to the Error List
		ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_HINT OR ADSLOG_MSGTYPE_LOG
			, msgFmtStr := 'Sort BCR Trigger : %s'
			, strArg := BOOL_TO_STRING(BCR_S6040_01.Out_TriggerState)); 
	END_IF
END_IF


// Send Read Information to Sorter	
//	Creates Arrival message at sorter
IF ReadID_P6040_Old <> BarCodeReaders.BCR_S6040_01.GoodreadCount THEN
	Arrival_Item.UniqueID := BCR_S6040_01.Out_ResultID;
	Arrival_Item.ID := BCR_S6040_01.Out_ReadString;
	Arrival_Item.Status := E_StatusCode.UpdateRequested;
	Arrival_Item.DeviceID := BArcodeReaders.BCR_S6040_01.In_EquipID;
	Arrival_Item.MessageType := E_MessageIds.Arrival_23;
	Arrival_Item.Destination := MsgControl.DefDestination;
	Arrival_Item.Length := 0;
	LastArrival_Item := Arrival_Item;
	fb_SorterArrivalBuffer.AddItem(Arrival_Item);
	ReadID_P6040_Old := BarCodeReaders.BCR_S6040_01.GoodreadCount;
ELSE 
	Arrival_Item := BlankItem;
	Arrival_Item.Status := E_StatusCode.UpdateRequested;
END_IF	

//----------------------------------------P7004--------------------------------------------------------------	
BCR_S7004_01.LogEntries := .nBarcodeLogEnable.BCR_S7004_01_LOG;
BCR_S7004_01(
	In_ReadTrig:= PhotoEyes.PE_12221.Out_OnFltrd, 
	In_ResetCounts:= , 
	In_TriggerOnTime := T#20MS ,
	In_EquipID := '00002',
	Out_NewReadTrig=> , 
	Out_ReadString=> , 
	Out_ReadStatus=> ,
	Out_ResultID=>, 
	MisreadCount=> , 
	GoodreadCount=> );
]]></ST>
    </Implementation>
    <LineIds Name="BarCodeReaders">
      <LineId Id="384" Count="0" />
      <LineId Id="491" Count="0" />
      <LineId Id="686" Count="0" />
      <LineId Id="685" Count="0" />
      <LineId Id="522" Count="0" />
      <LineId Id="687" Count="3" />
      <LineId Id="509" Count="1" />
      <LineId Id="385" Count="0" />
      <LineId Id="542" Count="3" />
      <LineId Id="742" Count="2" />
      <LineId Id="746" Count="0" />
      <LineId Id="745" Count="0" />
      <LineId Id="386" Count="1" />
      <LineId Id="960" Count="0" />
      <LineId Id="817" Count="0" />
      <LineId Id="389" Count="2" />
      <LineId Id="595" Count="0" />
      <LineId Id="851" Count="0" />
      <LineId Id="392" Count="5" />
      <LineId Id="408" Count="0" />
      <LineId Id="568" Count="0" />
      <LineId Id="592" Count="0" />
      <LineId Id="886" Count="0" />
      <LineId Id="593" Count="1" />
      <LineId Id="625" Count="3" />
      <LineId Id="710" Count="0" />
      <LineId Id="631" Count="0" />
      <LineId Id="780" Count="0" />
      <LineId Id="632" Count="3" />
      <LineId Id="887" Count="0" />
      <LineId Id="781" Count="0" />
      <LineId Id="645" Count="0" />
      <LineId Id="418" Count="0" />
      <LineId Id="713" Count="0" />
      <LineId Id="691" Count="4" />
      <LineId Id="784" Count="0" />
      <LineId Id="696" Count="3" />
      <LineId Id="785" Count="0" />
      <LineId Id="700" Count="1" />
      <LineId Id="709" Count="0" />
      <LineId Id="419" Count="0" />
      <LineId Id="919" Count="0" />
      <LineId Id="420" Count="14" />
      <LineId Id="947" Count="12" />
      <LineId Id="946" Count="0" />
      <LineId Id="92" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>